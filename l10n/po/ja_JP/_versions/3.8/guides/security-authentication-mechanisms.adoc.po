msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Authentication mechanisms in Quarkus"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid ""
"The Quarkus Security framework supports multiple authentication mechanisms, which you can use to secure your applications.\n"
"You can also combine authentication mechanisms."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Before you choose an authentication mechanism for securing your Quarkus applications, review the information provided."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Overview of supported authentication mechanisms"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid ""
"Some supported authentication mechanisms are built into Quarkus, while others require you to add an extension.\n"
"All of these mechanisms are detailed in the following sections:"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "<<built-in-authentication-mechanisms>>"
msgstr "<<built-in-authentication-mechanisms>>"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "<<other-supported-authentication-mechanisms>>"
msgstr "<<other-supported-authentication-mechanisms>>"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "The following table maps specific authentication requirements to a supported mechanism that you can use in Quarkus:"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Authentication requirements and mechanisms"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Authentication requirement"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Authentication mechanism"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Username and password"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "xref:security-basic-authentication.adoc[Basic], <<form-auth>>"
msgstr "xref:security-basic-authentication.adoc[基本的な] ことです、 <<form-auth>>"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Bearer access token"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication], xref:security-jwt.adoc[JWT], xref:security-oauth2.adoc[OAuth2]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Single sign-on (SSO)"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC Code Flow], <<form-auth>>"
msgstr "xref:security-oidc-code-flow-authentication.adoc[OIDCコードフロー] 、 <<form-auth>>"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Client certificate"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "<<mutual-tls>>"
msgstr "<<mutual-tls>>"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "WebAuthn"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-webauthn.adoc[WebAuthn]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Kerberos ticket"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-kerberos/dev/index.html[Kerberos]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "For more information, see the following <<table>> table."
msgstr "詳しくは、以下の <<table>> の表をご覧ください。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Built-in authentication mechanisms"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Quarkus Security provides the following built-in authentication support:"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-basic-authentication.adoc[Basic authentication]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "<<form-auth>>"
msgstr "<<form-auth>>"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Basic authentication"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid ""
"You can secure your Quarkus application endpoints with the built-in HTTP Basic authentication mechanism.\n"
"For more information, see the following documentation:"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-basic-authentication-howto.adoc[Enable Basic authentication]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-jpa.adoc[Quarkus Security with Jakarta Persistence]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-getting-started-tutorial.adoc[Getting started with Security by using Basic authentication and Jakarta Persistence]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-identity-providers.adoc[Identity providers]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Form-based authentication"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"Quarkus provides form-based authentication that works similarly to traditional Servlet form-based authentication.\n"
"Unlike traditional form authentication, the authenticated user is not stored in an HTTP session because Quarkus does not support clustered HTTP sessions.\n"
"Instead, the authentication information is stored in an encrypted cookie, which can be read by all cluster members who share the same encryption key."
msgstr "Quarkusは、従来のServletフォームベース認証と同様に動作するフォームベース認証を提供します。従来のフォーム認証とは異なり、Quarkusはクラスタ化されたHTTPセッションをサポートしていないため、認証されたユーザーはHTTPセッションに保存されません。代わりに、認証情報は暗号化されたCookieに保存され、同じ暗号化キーを共有するすべてのクラスタメンバが読み取ることができます。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid ""
"To apply encryption, add the `quarkus.http.auth.session.encryption-key` property, and ensure the value you set is at least 16 characters long.\n"
"The encryption key is hashed by using SHA-256.\n"
"The resulting digest is used as a key for AES-256 encryption of the cookie value.\n"
"The cookie contains an expiry time as part of the encrypted value, so all nodes in the cluster must have their clocks synchronized.\n"
"At one-minute intervals, a new cookie gets generated with an updated expiry time if the session is in use."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "With single-page applications (SPA), you typically want to avoid redirects by removing default page paths, as shown in the following example:"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"Now that you have disabled redirects for the SPA, you must log in and log out programmatically from your client.\n"
"Below are examples of JavaScript methods for logging into the `j_security_check` endpoint and logging out of the application by destroying the cookie."
msgstr "SPA のリダイレクトを無効にしたので、クライアントからプログラムでログインとログアウトを行う必要があります。以下は、 `j_security_check` エンドポイントにログインし、クッキーを破棄してアプリケーションからログアウトする JavaScript メソッドの例です。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"To log out of the SPA from the client, the cookie must be set to `quarkus.http.auth.form.http-only-cookie=false` so you can destroy\n"
"the cookie and possibly redirect back to your main page."
msgstr "クライアントからSPAからログアウトするには、クッキーを `quarkus.http.auth.form.http-only-cookie=false` に設定する必要があります。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"To log out of the SPA from the server, the cookie can be set to `quarkus.http.auth.form.http-only-cookie=true` and use this example\n"
"code to destroy the cookie."
msgstr "サーバーからSPAからログアウトするには、Cookieを `quarkus.http.auth.form.http-only-cookie=true` 、この例のコードを使用してCookieを破棄します。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "The following properties can be used to configure form-based authentication:"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Mutual TLS authentication"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Quarkus provides mutual TLS (mTLS) authentication so that you can authenticate users based on their X.509 certificates."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"To use this authentication method, you must first enable SSL/TLS for your application.\n"
"For more information, see the xref:http-reference.adoc#ssl[Supporting secure connections with SSL/TLS] section of the Quarkus \"HTTP reference\" guide."
msgstr "この認証方法を使用するには、まずアプリケーションでSSL/TLSを有効にする必要があります。詳細については、Quarkusの「HTTPリファレンス」ガイドの「 xref:http-reference.adoc#ssl[SSL/TLSによるセキュア接続のサポート] 」を参照してください。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "After your application accepts secure connections, the next step is to configure the `quarkus.http.ssl.certificate.trust-store-file` property with the name of that file that holds all the certificates your application trusts. The specified file also includes information about how your application asks for certificates when a client, such as a browser or other service, tries to access one of its protected resources."
msgstr "アプリケーションがセキュアな接続を受け入れるようになったら、次のステップとして、 `quarkus.http.ssl.certificate.trust-store-file` プロパティに、アプリケーションが信頼するすべての証明書を保持するファイル名を設定します。指定されたファイルには、ブラウザやその他のサービスなどのクライアントが保護されたリソースの 1 つにアクセスしようとするときに、アプリケーションが証明書を要求する方法に関する情報も含まれます。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "The keystore where the server's private key is located."
msgstr "サーバーの秘密鍵があるキーストア。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "The truststore from which the trusted certificates are loaded."
msgstr "信頼された証明書がロードされるトラストストア。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"With the value set to `required`, the server demands client certificates.\n"
"Set the value to `REQUEST` to allow the server to accept requests without a certificate.\n"
"This setting is beneficial when supporting authentication methods besides mTLS."
msgstr "値を `required` に設定すると、サーバーはクライアント証明書を要求します。値を `REQUEST` に設定すると、サーバは証明書なしで要求を受け付けます。この設定は、mTLS 以外の認証方法をサポートする場合に有益です。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Defines a policy where only authenticated users should have access to resources from your application."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"You can explicitly disable the plain HTTP protocol, thus requiring all requests to use HTTPS.\n"
"When you set `quarkus.http.ssl.client-auth` to `required`, the system automatically sets `quarkus.http.insecure-requests` to `disabled`."
msgstr "プレーン HTTP プロトコルを明示的に無効にして、すべての要求に HTTPS を使用させることができます。 `quarkus.http.ssl.client-auth` を `required` に設定すると、システムは自動的に `quarkus.http.insecure-requests` を `disabled` に設定します。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "When the incoming request matches a valid certificate in the truststore, your application can obtain the subject by injecting a `SecurityIdentity` as follows:"
msgstr "受信リクエストがトラストストアの有効な証明書と一致する場合、アプリケーションは `SecurityIdentity` を注入することで以下のようにサブジェクトを取得できます："

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Obtaining the subject"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "You can also get the certificate by using the code outlined in the following example:"
msgstr "また、以下の例で説明するコードを使用して証明書を取得することもできます："

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Obtaining the certificate"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Authorization"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"The information from the client certificate can be used to enhance Quarkus `SecurityIdentity`.\n"
"For example, you can add new roles after checking a client certificate subject name, and so on.\n"
"For more information about customizing `SecurityIdentity`, see the xref:security-customization.adoc#security-identity-customization[Security identity customization] section in the Quarkus \"Security tips and tricks\" guide."
msgstr "クライアント証明書の情報は、Quarkus `SecurityIdentity` 。たとえば、クライアント証明書のサブジェクト名を確認した後に、新しいロールを追加することなどが可能です。 `SecurityIdentity` のカスタマイズの詳細については、Quarkusの「セキュリティに関するヒントとトリック」ガイドの xref:security-customization.adoc#security-identity-customization[セキュリティアイデンティティのカスタマイズの] セクションを参照してください。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Other supported authentication mechanisms"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Quarkus Security also supports the following authentication mechanisms through extensions:"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "<<webauthn-authentication>>"
msgstr "<<webauthn-authentication>>"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "<<openid-connect-authentication>>"
msgstr "<<openid-connect-authentication>>"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "<<smallrye-jwt-authentication>>"
msgstr "<<smallrye-jwt-authentication>>"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "<<oauth2-authentication>>"
msgstr "<<oauth2-authentication>>"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "WebAuthn authentication"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid ""
"https://webauthn.guide/[WebAuthn] is an authentication mechanism that replaces passwords.\n"
"When you write a service for registering new users, or logging them in, instead of asking for a password, you can use WebAuthn, which replaces the password.\n"
"For more information, see the xref:security-webauthn.adoc[Secure a Quarkus application by using the WebAuthn authentication mechanism] guide."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "OpenID Connect authentication"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid ""
"OpenID Connect (OIDC) is an identity layer that works on top of the OAuth 2.0 protocol.\n"
"OIDC enables client applications to verify the identity of a user based on the authentication performed by the OIDC provider and retrieve basic information about that user."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"The Quarkus `quarkus-oidc` extension provides a reactive, interoperable, multitenant-enabled OIDC adapter that supports Bearer token and Authorization Code Flow authentication mechanisms.\n"
"The Bearer token authentication mechanism extracts the token from the HTTP Authorization header."
msgstr "Quarkus `quarkus-oidc` エクステンションは、ベアラートークンと認可コードフロー認証メカニズムをサポートする、リアクティブで相互運用可能なマルチテナント対応OIDCアダプタを提供します。ベアラートークン認証メカニズムは、HTTP認可ヘッダーからトークンを抽出します。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"The Authorization Code Flow mechanism redirects the user to an OIDC provider to authenticate the user's identity.\n"
"After the user is redirected back to Quarkus, the mechanism completes the authentication process by exchanging the provided code that was granted for the ID, access, and refresh tokens."
msgstr "認可コードフローメカニズムは、ユーザーをOIDCプロバイダーにリダイレクトして、ユーザーのIDを認証します。ユーザーがQuarkusにリダイレクトされた後、認証メカニズムは、付与されたコードをID、アクセス、リフレッシュトークンと交換することで、認証プロセスを完了します。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"You can verify ID and access JSON Web Token (JWT) tokens by using the refreshable JSON Web Key (JWK) set or introspect them remotely.\n"
"However, opaque, also known as binary tokens, can only be introspected remotely."
msgstr "リフレッシュ可能な JSON Web Key (JWK) セットを使用するか、リモートでイントロスペクトすることで、JSON Web Token (JWT) トークンの ID を検証し、トークンにアクセスできます。ただし、バイナリートークンとも呼ばれる不透明なトークンは、リモートでのみイントロスペクトできます。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "Using the Quarkus OIDC extension, both the Bearer token and Authorization Code Flow authentication mechanisms use <<smallrye-jwt-authentication>> to represent JWT tokens as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "Quarkus OIDC 拡張機能を使用すると、ベアラートークンと認証コードフロー認証メカニズムの両方で、 <<smallrye-jwt-authentication>> を使用して JWT トークンを MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken` として表現できます。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Additional Quarkus resources for OIDC authentication"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "For more information about OIDC authentication and authorization methods that you can use to secure your Quarkus applications, see the following resources:"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "OIDC topic"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Quarkus information resource"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Bearer token authentication mechanism"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Authorization Code Flow authentication mechanism"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-oidc-code-flow-authentication.adoc[OpenID Connect (OIDC) Authorization Code Flow mechanism]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "OIDC and SAML Identity broker"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-oidc-code-flow-authentication.adoc#oidc-saml-broker[OpenID Connect (OIDC) Authorization Code Flow and SAML Identity broker]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Multiple tenants that can support the Bearer token authentication or Authorization Code Flow mechanisms"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect (OIDC) multi-tenancy]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "Securing Quarkus with commonly used OpenID Connect providers"
msgstr "一般的に使用されているOpenID Connectプロバイダを使用したQuarkusセキュリティ"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-openid-connect-providers.adoc[Configuring well-known OpenID Connect providers]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Using Keycloak to centralize authorization"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-keycloak-authorization.adoc[Using OpenID Connect (OIDC) and Keycloak to centralize authorization]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Configuring Keycloak programmatically"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-keycloak-admin-client.adoc[Using the Keycloak admin client]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"To enable the Quarkus OIDC extension at runtime, set `quarkus.oidc.tenant-enabled=false` at build time.\n"
"Then, re-enable it at runtime by using a system property."
msgstr "Quarkus OIDCエクステンションを実行時に有効にするには、ビルド時に `quarkus.oidc.tenant-enabled=false` 。その後、システムプロパティを使用して、実行時に再有効化します。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "For more information about managing the individual tenant configurations in multitenant OIDC deployments, see the xref:security-openid-connect-multitenancy.adoc#disable-tenant[Disabling tenant configurations] section in the \"Using OpenID Connect (OIDC) multi-tenancy\" guide."
msgstr "マルチテナント OIDC 展開における個々のテナント構成の管理に関する詳細については、「OpenID Connect (OIDC) マルチテナントの使用」ガイドの「 xref:security-openid-connect-multitenancy.adoc#disable-tenant[テナント構成の無効化] 」セクションを参照してください。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "OpenID Connect client and filters"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "The `quarkus-oidc-client` extension provides `OidcClient` for acquiring and refreshing access tokens from OpenID Connect and OAuth2 providers that support the following token grants:"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "`client-credentials`"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "`password`"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "`refresh_token`"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"The `quarkus-oidc-client-filter` extension requires the `quarkus-oidc-client` extension.\n"
"It provides JAX-RS RESTful Web Services `OidcClientRequestFilter`, which sets the access token acquired by `OidcClient` as the `Bearer` scheme value of the HTTP `Authorization` header.\n"
"This filter can be registered with MicroProfile REST client implementations injected into the current Quarkus endpoint, but it is not related to the authentication requirements of this service endpoint.\n"
"For example, it can be a public endpoint or be protected with mTLS."
msgstr "`quarkus-oidc-client-filter` エクステンションは `quarkus-oidc-client` エクステンションを必要とします。これは、JAX-RS RESTful Web Services `OidcClientRequestFilter` を提供し、 `OidcClient` によって取得されたアクセストークンを HTTP `Authorization` ヘッダーの `Bearer` スキーム値として設定します。このフィルタは、現在の Quarkus エンドポイントに注入された MicroProfile REST クライアント実装に登録できますが、このサービスエンドポイントの認証要件とは関係ありません。たとえば、パブリックエンドポイントにすることも、mTLS で保護することもできます。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "In this scenario, you do not need to protect your Quarkus endpoint by using the Quarkus OpenID Connect adapter."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"The `quarkus-oidc-token-propagation` extension requires the `quarkus-oidc` extension.\n"
"It provides Jakarta REST `TokenCredentialRequestFilter`, which sets the OpenID Connect Bearer token or Authorization Code Flow access token as the `Bearer` scheme value of the HTTP `Authorization` header.\n"
"This filter can be registered with MicroProfile REST client implementations injected into the current Quarkus endpoint, which must be protected by using the Quarkus OIDC adapter.\n"
"This filter can propagate the access token to the downstream services."
msgstr "`quarkus-oidc-token-propagation` エクステンションには `quarkus-oidc` エクステンションが必要です。これは、OpenID Connect ベアラートークンまたは認可コードフローアクセストークンを HTTP `Authorization` ヘッダーの `Bearer` スキーム値として設定する Jakarta REST `TokenCredentialRequestFilter` を提供します。このフィルターは、Quarkus OIDC アダプターを使用して保護する必要がある現在の Quarkus エンドポイントに注入された MicroProfile REST クライアント実装に登録できます。このフィルタは、アクセストークンを下流のサービスに伝達することができます。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "For more information, see the xref:security-openid-connect-client.adoc[OpenID Connect client and token propagation quickstart] and xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) and OAuth2 client and filters reference] guides."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "SmallRye JWT authentication"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"The `quarkus-smallrye-jwt` extension provides a MicroProfile JSON Web Token (JWT) 2.1 implementation and multiple options to verify signed and encrypted `JWT` tokens.\n"
"It represents them as `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "`quarkus-smallrye-jwt` エクステンションは、MicroProfile JSON Web Token (JWT) 2.1 の実装と、署名および暗号化された `JWT` トークンを検証するための複数のオプションを提供します。これらは `org.eclipse.microprofile.jwt.JsonWebToken` として表現されます。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"`quarkus-smallrye-jwt` is an alternative to the `quarkus-oidc` Bearer token authentication mechanism and verifies only `JWT` tokens by using either Privacy Enhanced Mail (PEM) keys or the refreshable `JWK` key set.\n"
"`quarkus-smallrye-jwt` also provides the JWT generation API, which you can use to easily create `signed`, `inner-signed`, and `encrypted` `JWT` tokens."
msgstr "`quarkus-smallrye-jwt` は、 ベアラートークン認証メカニズムの代替で、Privacy Enhanced Mail（PEM）キーまたはリフレッシュ可能な キーセットのいずれかを使用して、 トークンのみを検証します。 は JWT 生成 API も提供しており、これを使用して 、 、  トークンを簡単に作成できます。 `quarkus-oidc` `JWK` `JWT` `quarkus-smallrye-jwt` `signed` `inner-signed` `encrypted` `JWT`"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "For more information, see the xref:security-jwt.adoc[Using JWT RBAC] guide."
msgstr "詳細については、「 xref:security-jwt.adoc[JWT RBACの使用] 」ガイドを参照してください。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "OAuth2 authentication"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"`quarkus-elytron-security-oauth2` provides an alternative to the Quarkus `quarkus-oidc` Bearer token authentication mechanism extension.\n"
"`quarkus-elytron-security-oauth2` is based on `Elytron` and is primarily intended for introspecting opaque tokens remotely."
msgstr "`quarkus-elytron-security-oauth2` は、Quarkus ベアラートークン認証メカニズムエクステンションの代替を提供します。 は に基づいており、主にリモートで不透明トークンをイントロスペクトすることを目的としています。 `quarkus-oidc` `quarkus-elytron-security-oauth2` `Elytron`"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "For more information, see the Quarkus xref:security-oauth2.adoc[Using OAuth2] guide."
msgstr "詳細については、Quarkus xref:security-oauth2.adoc[Using OAuth2] ガイドを参照してください。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Use the following information to select the appropriate token authentication mechanism to secure your Quarkus applications."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "List of authentication mechanism use cases"
msgstr "認証メカニズムの使用例一覧"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"`quarkus-oidc` requires an OpenID Connect provider such as Keycloak, which can verify the bearer tokens or authenticate the end users with the Authorization Code flow.\n"
"In both cases, `quarkus-oidc` requires a connection to the specified OpenID Connect provider."
msgstr "`quarkus-oidc` には、ベアラートークンを検証したり、認可コードフローでエンドユーザーを認証したりできる、KeycloakなどのOpenID Connectプロバイダーが必要です。どちらの場合も、 、指定されたOpenID Connectプロバイダへの接続が必要です。 `quarkus-oidc`"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"If the user authentication requires Authorization Code flow, or you need to support multiple tenants, use `quarkus-oidc`.\n"
"`quarkus-oidc` can also request user information by using both Authorization Code Flow and Bearer access tokens."
msgstr "ユーザー認証に認可コードフローが必要な場合、または複数のテナントをサポートする必要がある場合は、 `quarkus-oidc` を使用してください。 `quarkus-oidc` は、認可コードフローとベアラー・アクセストークンの両方を使用してユーザー情報を要求することもできます。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "If your bearer tokens must be verified, use `quarkus-oidc`, `quarkus-smallrye-jwt`, or `quarkus-elytron-security-oauth2`."
msgstr "ベアラートークンを検証する必要がある場合は、 `quarkus-oidc` 、 `quarkus-smallrye-jwt` 、または `quarkus-elytron-security-oauth2` を使用してください。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"If your bearer tokens are in a JSON web token (JWT) format, you can use any extensions in the preceding list.\n"
"Both `quarkus-oidc` and `quarkus-smallrye-jwt` support refreshing the `JsonWebKey` (JWK) set when the OpenID Connect provider rotates the keys.\n"
"Therefore, if remote token introspection must be avoided or is unsupported by the providers, use `quarkus-oidc` or `quarkus-smallrye-jwt` to verify JWT tokens."
msgstr "ベアラートークンがJSONウェブトークン（JWT）形式である場合、前述のリストにあるどのエクステンションも使用できます。 `quarkus-oidc` と `quarkus-smallrye-jwt` はどちらも、OpenID Connect プロバイダがキーをローテーションする際に `JsonWebKey` (JWK) セットをリフレッシュすることをサポートしています。したがって、リモート・トークン・イントロスペクションを避けなければならない場合、またはプロバイダがサポートしていない場合は、 `quarkus-oidc` または `quarkus-smallrye-jwt` を使用して JWT トークンを検証してください。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"To introspect the JWT tokens remotely, you can use either `quarkus-oidc` or `quarkus-elytron-security-oauth2` because they support verifying the opaque or binary tokens by using remote introspection.\n"
"`quarkus-smallrye-jwt` does not support the remote introspection of both opaque or JWT tokens but instead relies on the locally available keys that are usually retrieved from the OpenID Connect provider."
msgstr "JWT トークンをリモートでイントロスペクションするには、 `quarkus-oidc` または `quarkus-elytron-security-oauth2` のいずれかを使用できます。 `quarkus-smallrye-jwt` は、opaque トークンまたは JWT トークンの両方のリモートイントロスペクションをサポートしていませんが、その代わりに、通常は OpenID Connect プロバイダから取得されるローカルで利用可能なキーに依存します。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"`quarkus-oidc` and `quarkus-smallrye-jwt` support the JWT and opaque token injection into the endpoint code.\n"
"Injected JWT tokens provide more information about the user.\n"
"All extensions can have the tokens injected as `Principal`."
msgstr "`quarkus-oidc` と は、エンドポイント・コードへの JWT と不透明トークンの注入をサポートしています。注入された JWT トークンは、ユーザーに関するより多くの情報を提供します。すべてのエクステンションは、 としてトークンを注入することができます。 `quarkus-smallrye-jwt` `Principal`"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid ""
"`quarkus-smallrye-jwt` supports more key formats than `quarkus-oidc`.\n"
"`quarkus-oidc` uses only the JWK-formatted keys that are part of a JWK set, whereas `quarkus-smallrye-jwt` supports PEM keys."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"`quarkus-smallrye-jwt` handles locally signed, inner-signed-and-encrypted, and encrypted tokens.\n"
"In contrast, although `quarkus-oidc` and `quarkus-elytron-security-oauth2` can also verify such tokens, they treat them as opaque tokens and verify them through remote introspection."
msgstr "`quarkus-smallrye-jwt` は、ローカルで署名されたトークン、内部で署名および暗号化されたトークン、暗号化されたトークンを扱います。対照的に、 と はこのようなトークンを検証することもできますが、不透明なトークンとして扱い、リモートのイントロスペクションによって検証します。 `quarkus-oidc` `quarkus-elytron-security-oauth2`"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "If you need a lightweight library for the remote introspection of opaque or JWT tokens, use `quarkus-elytron-security-oauth2`."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid ""
"Architectural considerations drive your decision to use opaque or JSON web token (JWT) token format.\n"
"Opaque tokens tend to be much shorter than JWT tokens but need most of the token-associated state to be maintained in the provider database.\n"
"Opaque tokens are effectively database pointers."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"JWT tokens are significantly longer than opaque tokens.\n"
"Nonetheless, the providers effectively delegate most of the token-associated state to the client by storing it as the token claims and either signing or encrypting them."
msgstr "JWT トークンは不透明トークンよりもかなり長いです。それにもかかわらず、プロバイダはトークンに関連する状態のほとんどを、トークン請求として保存し、署名するか暗号化することによって、クライアントに効率的に委譲します。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Token authentication mechanism comparison"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Feature required"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "`quarkus-oidc`"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "`quarkus-smallrye-jwt`"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "`quarkus-elytron-security-oauth2`"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Bearer JWT verification"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Local verification or introspection"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Local verification"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Introspection"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Bearer opaque token verification"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "No"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "Refreshing `JsonWebKey` set to verify JWT tokens"
msgstr "JWT トークンを検証するために `JsonWebKey` セットをリフレッシュします。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Yes"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Represent token as `Principal`"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Inject JWT as MP JWT"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Authorization code flow"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Multi-tenancy"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "User information support"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "PEM key format support"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "SecretKey support"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "In JSON Web Key (JWK) format"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Inner-signed and encrypted or encrypted tokens"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Custom token verification"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "With injected JWT parser"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "JWT as a cookie support"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Combining authentication mechanisms"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"If different sources provide the user credentials, you can combine authentication mechanisms.\n"
"For example, you can combine the built-in Basic and the Quarkus `quarkus-oidc` Bearer token authentication mechanisms."
msgstr "異なるソースからユーザークレデンシャルが提供される場合、認証メカニズムを組み合わせることができます。たとえば、組み込みのBasic認証とQuarkus `quarkus-oidc` ベアラートークン認証メカニズムを組み合わせることができます。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid "You cannot combine the Quarkus `quarkus-oidc` Bearer token and `smallrye-jwt` authentication mechanisms because both mechanisms attempt to verify the token extracted from the HTTP Bearer token authentication scheme."
msgstr "Quarkus `quarkus-oidc` ベアラートークンと `smallrye-jwt` 認証メカニズムを組み合わせることはできません。どちらのメカニズムも、HTTP ベアラートークン認証スキームから抽出されたトークンの検証を試みるからです。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Path-specific authentication mechanisms"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "The following configuration example demonstrates how you can enforce a single selectable authentication mechanism for a given request path:"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Ensure that the value of the `auth-mechanism` property matches the authentication scheme supported by `HttpAuthenticationMechanism`, for example, `basic`, `bearer`, or `form`."
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "Proactive authentication"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
#, fuzzy
msgid ""
"Proactive authentication is enabled in Quarkus by default.\n"
"This means that if an incoming request has a credential, the request will always be authenticated, even if the target page does not require authentication.\n"
"For more information, see the Quarkus xref:security-proactive-authentication.adoc[Proactive authentication] guide."
msgstr "Quarkusでは、プロアクティブ認証がデフォルトで有効になっています。つまり、受信リクエストにクレデンシャルがある場合、ターゲットページが認証を必要としなくても、リクエストは常に認証されます。詳細については、Quarkus xref:security-proactive-authentication.adoc[プロアクティブ認証] ガイドを参照してください。"

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "References"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr ""

#: _versions/3.8/guides/security-authentication-mechanisms.adoc
msgid "xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints]"
msgstr ""
