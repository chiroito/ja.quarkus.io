msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/main/guides/grpc-kubernetes.adoc
#, no-wrap
msgid "Deploying your gRPC Service in Kubernetes"
msgstr "KubernetesでgRPCサービスをデプロイする"

#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy
msgid ""
"This page explains how to deploy your gRPC service in Quarkus in Kubernetes.\n"
"We'll continue with the example from xref:grpc-getting-started.adoc[the Getting Started gRPC guide]."
msgstr "このページでは、QuarkusでgRPCサービスをKubernetesにデプロイする方法を説明します。ここでは、 xref:grpc-getting-started.adoc[gRPC入門ガイド] の例を続けます。"

#. type: Title ==
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy, no-wrap
msgid "Configuring your project to use the Quarkus Kubernetes extension"
msgstr "Quarkus Kubernetesエクステンションを使用するようにプロジェクトを設定する"

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "Add the Quarkus Kubernetes extension to your build file:"
msgstr "ビルドファイルにQuarkus Kubernetesエクステンションを追加します："

#. type: Block title
#: _versions/main/guides/grpc-kubernetes.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/grpc-kubernetes.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "Next, we want to expose our application using the Kubernetes Ingress resource:"
msgstr "次に、Kubernetes Ingressリソースを使ってアプリケーションを公開したい："

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "The Quarkus Kubernetes will bind the HTTP server using the port name `http` and the gRPC server using the port name `grpc`. By default, the Quarkus application will only expose the port name `http`, so only the HTTP server will be publicly accessible. To expose the gRPC server instead, set the `quarkus.kubernetes.ingress.target-port=grpc` property in your application.properties:"
msgstr "Quarkus Kubernetesは、ポート名 `http` を使用してHTTPサーバーをバインドし、ポート名 `grpc` を使用してgRPCサーバーをバインドします。デフォルトでは、Quarkusアプリケーションはポート名 `http` だけを公開するため、HTTPサーバーだけが一般にアクセス可能になります。代わりにgRPCサーバーを公開するには、application.propertiesで `quarkus.kubernetes.ingress.target-port=grpc` プロパティを設定します："

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "If you configure Quarkus to use the same port for both HTTP and gRPC servers with the property `quarkus.grpc.server.use-separate-server=false`, then you don't need to change the default `target-port`."
msgstr "プロパティ `quarkus.grpc.server.use-separate-server=false` を使用して、HTTPサーバーとgRPCサーバーの両方に同じポートを使用するようにQuarkusを設定する場合は、デフォルトの `target-port` を変更する必要はありません。"

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "Finally, we need to generate the Kubernetes manifests by running the command in a terminal:"
msgstr "最後に、ターミナルでコマンドを実行してKubernetesマニフェストを生成する必要がある："

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "Once generated, you can look at the `target/kubernetes` directory:"
msgstr "生成されたら、 `target/kubernetes` ディレクトリを見ることができる："

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "You can find more information about how to deploy the application in Kubernetes in the xref:deploying-to-kubernetes.adoc#deployment[the Kubernetes guide]."
msgstr "Kubernetesでアプリケーションをデプロイする方法については、 xref:deploying-to-kubernetes.adoc#deployment[Kubernetesガイド] を参照してほしい。"

#. type: Title ==
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy, no-wrap
msgid "Using gRPC Health probes"
msgstr "gRPCヘルス・プローブの使用"

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "By default, the Kubernetes resources do not contain readiness and liveness probes. To add them, import the Smallrye Health extension to your build file:"
msgstr "デフォルトでは、Kubernetesリソースには準備状態と有効性のプローブが含まれていません。これらを追加するには、ビルドファイルにSmallrye Healthエクステンションをインポートします："

#: _versions/main/guides/grpc-kubernetes.adoc
msgid "More information about the health extension can be found in xref:smallrye-health.adoc[the SmallRye Health guide]."
msgstr ""

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "By the default, this extension will configure the probes to use the HTTP server (which is provided by some extensions like the Quarkus RESTEasy reactive extension). Internally, this probe will also use xref:grpc-service-implementation.adoc#health[the generated gRPC Health services]."
msgstr "デフォルトでは、このエクステンションは HTTP サーバー (Quarkus RESTEasy reactive エクステンションなど、一部のエクステンションで提供されるもの) を使用するようにプローブを構成します。内部的には、このプローブは xref:grpc-service-implementation.adoc#health[生成された gRPC Health サービスも] 使用します。"

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "If your application does not use any Quarkus extension that exposes an HTTP server, you can still configure the probes to directly use the gRPC Health service by adding the property `quarkus.kubernetes.readiness-probe.grpc-action-enabled=true` into your configuration:"
msgstr "アプリケーションでHTTPサーバーを公開するQuarkusエクステンションを使用していない場合でも、 `quarkus.kubernetes.readiness-probe.grpc-action-enabled=true` というプロパティを設定に追加することで、gRPC Healthサービスを直接使用するようにプローブを設定できます："
