msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Using JDK Flight Recorder"
msgstr "JDKフライトレコーダーの使用"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"This guide explains how https://openjdk.org/jeps/328[JDK Flight Recorder] (JFR) can be extended to provide insight into your Quarkus application.\n"
"insight into itself.\n"
"JFR records various information from the Java standard API and JVM as events.\n"
"By adding this extension, you can add custom Quarkus events to JFR. This will help you solve problems in your application."
msgstr "このガイドでは、 link:https://openjdk.org/jeps/328[JDK Flight Recorder] （JFR）を拡張して、Quarkusアプリケーションに関する情報を提供する方法について説明します。JFR は、Java 標準 API および JVM からのさまざまな情報をイベントとして記録します。この拡張機能を追加すると、カスタムのQuarkusイベントをJFRに追加できます。これにより、アプリケーションの問題解決に役立ちます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"JFR can be preconfigured to dump a file, and when the application exits, JFR will output the file.\n"
"The file will contain the contents of the JFR event stream to which Quarkus custom events have also been added.\n"
"You can, of course, get this file at any time you want, even if your application exits unexpectedly."
msgstr "JFRはファイルをダンプするように事前に設定することができ、アプリケーションが終了すると、JFRはそのファイルを出力します。このファイルには、Quarkusのカスタムイベントが追加されたJFRイベントストリームの内容が含まれます。もちろん、アプリケーションが予期せず終了した場合でも、いつでもこのファイルを取得できます。"

#: _versions/main/guides/jfr.adoc
msgid "Prerequisites"
msgstr "前提条件"

#: _versions/main/guides/jfr.adoc
msgid "Architecture"
msgstr "アーキテクチャ"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "In this guide, we create a straightforward REST application to demonstrate JFR."
msgstr "このガイドでは、JFR を実証するための簡単な REST アプリケーションを作成します。"

#: _versions/main/guides/jfr.adoc
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#: _versions/main/guides/jfr.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"This command generates the Maven project and imports the `quarkus-jfr` extension,\n"
"which includes the default JFR support."
msgstr "このコマンドは Maven プロジェクトを生成し、デフォルトの JFR サポートを含む `quarkus-jfr` 拡張機能をインポートします。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the `quarkus-jfr` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "Quarkusプロジェクトがすでに設定されている場合は、プロジェクトのベースディレクトリで次のコマンドを実行することで、 `quarkus-jfr` 拡張機能をプロジェクトに追加できます："

#: _versions/main/guides/jfr.adoc
msgid "This will add the following to your build file:"
msgstr "これにより、ビルドファイルに以下が追加されます:"

#: _versions/main/guides/jfr.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/main/guides/jfr.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/jfr.adoc
msgid "Examine the Jakarta REST resource"
msgstr "Jakarta REST リソースの調査"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Create a `src/main/java/org/acme/jfr/JfrResource.java` file with the following content:"
msgstr "以下の内容で `src/main/java/org/acme/jfr/JfrResource.java` ："

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Notice that there is no JFR specific code included in the application. By default, requests sent to this\n"
"endpoint will be recorded into JFR without any required code changes."
msgstr "アプリケーションには JFR 固有のコードが含まれていないことに注意してください。デフォルトでは、このエンドポイントに送られたリクエストは、コードを変更することなくJFRに記録されます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Running Quarkus applications and JFR"
msgstr "QuarkusアプリケーションとJFRの実行"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Now we are ready to run our application.\n"
"We can launch the application with JFR configured to be enabled from the startup of the Java Virtual Machine."
msgstr "これで、アプリケーションを実行する準備ができました。Java仮想マシンの起動時にJFRが有効になるように設定して、アプリケーションを起動することができます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "With the JDK Flight Recorder and the application running, we can make a request to the provided endpoint:"
msgstr "JDK Flight Recorderとアプリケーションの実行により、提供されたエンドポイントにリクエストすることができます："

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "This is all that was needed to write the information to the JFR."
msgstr "これだけで、JFRに情報を書き込むことができました。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Save the JFR to a file"
msgstr "JFRをファイルに保存"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"As mentioned above,　the Quarkus application was configured to also start JFR at startup and dump it to a `myrecording.jfr` when it terminates.\n"
"So we can get the file when we hit `CTRL+C` or type `q` to stop the application."
msgstr "前述したように、Quarkusアプリケーションは起動時にJFRを起動し、終了時に `myrecording.jfr` 。そのため、 `CTRL+C` を押したり、 `q` を入力してアプリケーションを停止すると、ファイルを取得できます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Or, we can also dump with the jcmd command."
msgstr "あるいは、jcmdコマンドでダンプすることもできます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "jcmd <PID> JFR.dump name=quarkus filename=myrecording.jfr"
msgstr "jcmd <PID> JFR.dump name=quarkus filename=myrecording.jfr"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Running jcmd command give us a list of running Java processes and the PID of each process."
msgstr "jcmdコマンドを実行すると、実行中のJavaプロセスのリストと各プロセスのPIDが表示されます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Open JFR dump file"
msgstr "JFRダンプファイルを開く"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"We can open a JFR dump using two tools: Jfr CLI and JDK Mission Control (JMC).\n"
"It is also possible to read them using JFR APIs, but we won't go into that here."
msgstr "2つのツールを使ってJFRダンプを開くことができます：Jfr CLIとJDK Mission Control（JMC）です。JFRのAPIを使って読み込むこともできますが、ここでは触れません。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "jfr CLI"
msgstr "jfr CLI"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"The jfr CLI is a tool included in OpenJDK. The executable file is `$JAVA_HOME/bin/jfr`.\n"
"We can use the jfr CLI to see a list of events limited to those related to Quarkus in the dump file by doing the following."
msgstr "jfr CLIはOpenJDKに含まれるツールです。実行ファイルは `$JAVA_HOME/bin/jfr` です。jfr CLIを使用すると、ダンプファイル内のQuarkusに関連するイベントに限定して、次のようにイベントのリストを表示できます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "jfr print --categories quarkus myrecording.jfr"
msgstr "jfr print --categories quarkus myrecording.jfr"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "JDK Mission Control"
msgstr "JDKミッション・コントロール"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"JMC is essentially a GUI viewer for JFR.\n"
"Some distributions include JMC in OpenJDK binary, but if not, we need to download it manually.\n"
"To see a list of events using the JMC, first we load the JFR file in the JMC as follows."
msgstr "JMCは基本的にJFRのGUIビューアです。OpenJDKのバイナリにJMCが含まれているディストリビューションもありますが、そうでない場合は手動でダウンロードする必要があります。JMCを使ってイベントのリストを見るには、まずJMCにJFRファイルを次のように読み込みます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "jmc -open myrecording.jfr"
msgstr "jmc -open myrecording.jfr"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"After opening the JFR file, we have two options.\n"
"One is to view the events as a tabular list, and the other is to view the events on the threads in which they occurred, in chronological order."
msgstr "JFRファイルを開くと、2つのオプションがあります。ひとつは、イベントを表形式のリストとして表示する方法、もうひとつは、イベントが発生したスレッド上で時系列順に表示する方法です。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "To view Quarkus events in tabular style, select the Event Browser on the left side of the JMC, then open the Quarkus event type tree on the right side of the JMC."
msgstr "Quarkusのイベントを表形式で表示するには、JMCの左側にあるイベントブラウザを選択し、JMCの右側にあるQuarkusイベントタイプツリーを開きます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "To see Quarkus events in chronological order on a thread, select the `Java application` and `Threads` on the left side of the JMC."
msgstr "Quarkusのイベントをスレッド上で時系列順に表示するには、JMCの左側にある `Java application` 、 `Threads` 。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"The standard configuration does not show Quarkus events.\n"
"We have to do three tasks to see the Quarkus events."
msgstr "標準の設定では、Quarkusのイベントは表示されません。Quarkusのイベントを表示するには、3つのタスクを実行する必要があります。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Right-click and select `Edit Thread Activity Lanes...`."
msgstr "右クリックして、 `Edit Thread Activity Lanes…​` を選択します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Select the plus button to add a new lane on the left side, then check to display that lane."
msgstr "左側に新しいレーンを追加するプラスボタンを選択し、チェックするとそのレーンが表示されます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Select Quarkus as the event type that lane will display and press OK."
msgstr "レーンに表示されるイベントタイプとしてQuarkusを選択し、OKを押します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Now we can see the Quarkus events per thread."
msgstr "これで、スレッドごとのQuarkusイベントを見ることができます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Non-blocking is where multiple processes are processed apparently simultaneously in a single thread.\n"
"Therefore, this extension records multiple JFR events concurrently, and a number of events might overlap on the JMC.\n"
"This could make it difficult for you to see the events you want to see.\n"
"To avoid this, we recommend to use xref:#identifying-requests[Request ID] to filter events so that you only see the information about the requests you want to see."
msgstr "ノンブロッキングとは、1つのスレッドで複数の処理が見かけ上同時に処理されることです。そのため、この拡張機能では複数の JFR イベントが同時に記録され、JMC 上でいくつかのイベントが重なる可能性があります。このため、見たいイベントを見ることが難しくなる可能性があります。これを避けるには、 xref:identifying-requests[Request ID を] 使用してイベントをフィルタリングし、見たいリクエストの情報のみを見るようにすることをお勧めします。"

#: _versions/main/guides/jfr.adoc
msgid "Events"
msgstr "イベント"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Identifying Requests"
msgstr "リクエストの特定"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"This extension works with the OpenTelemetry extension.\n"
"The events recorded by this extension have a trace ID and a span ID. These are recorded with the OpenTelemetry IDs respectively."
msgstr "このエクステンションは OpenTelemetry エクステンションと連動します。この拡張機能によって記録されるイベントには、トレース ID とスパン ID があります。これらはそれぞれ OpenTelemetry ID で記録されます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "This means that after we identify the trace and span IDs of interest from the UI provided by the OpenTelemetry implementation, we can immediately jump to the details in JFR using those IDs."
msgstr "つまり、OpenTelemetry の実装が提供する UI から、興味のあるトレース ID とスパン ID を特定したら、その ID を使って、すぐに JFR の詳細にジャンプできるのです。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"If we have not enabled the OpenTelemetry extension, this extension creates an ID for each request and links it to JFR events as a traceId.\n"
"In this case, the span ID will be null."
msgstr "OpenTelemetry 拡張機能を有効にしていない場合、この拡張機能はリクエストごとに ID を作成し、traceId として JFR イベントにリンクします。この場合、スパン ID は null になります。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "For now, Quarkus only has REST events, but we plan to use this ID to link each event to each other as we add more events in the future."
msgstr "今のところ、QuarkusにはRESTイベントしかありませんが、将来的にイベントを追加する際には、このIDを使って各イベントを互いにリンクさせる予定です。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Event Implementation Policy"
msgstr "イベント実施方針"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"When JFR starts recording an event, the event does not record to JFR yet, but when it commits that event, the event is recorded.\n"
"Therefore, events that have started recording at dump time but have not yet been committed are not dumped.\n"
"This is unavoidable due to the design of JFR.\n"
"This means that events are not recorded forever if there are prolonged processing.\n"
"Therefore, you will not be aware of prolonged processing."
msgstr "JFRがイベントの記録を開始した時点では、そのイベントはまだJFRに記録されていませんが、そのイベントをコミットした時点で、そのイベントは記録されます。そのため、ダンプ時に記録を開始しているが、まだコミットしていないイベントはダンプされません。これはJFRの設計上避けられません。つまり、処理が長引いた場合、イベントはいつまでも記録されません。そのため、処理が長引いたことを意識することはありません。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"To solve this problem, Quarkus can also record start and end events at the beginning and end of processing.\n"
"These events are disabled by default.\n"
"However, we can enable these events on JFR.(described below)"
msgstr "この問題を解決するために、Quarkusでは処理の開始時と終了時に開始イベントと終了イベントを記録することもできます。これらのイベントはデフォルトでは無効になっています。しかし、JFRでこれらのイベントを有効にすることができます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST API Event"
msgstr "REST API イベント"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"This event is recorded when either `quarkus-rest` or `resteasy-classic` extension is enabled.\n"
"The following three JFR events are recorded as soon as REST server processing is complete."
msgstr "このイベントは、 `quarkus-rest` または `resteasy-classic` のいずれかの拡張機能が有効な場合に記録されます。以下の 3 つの JFR イベントは、REST サーバの処理が完了すると同時に記録されます。"

#: _versions/main/guides/jfr.adoc
msgid "REST"
msgstr "REST"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST Start"
msgstr "RESTスタート"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST End"
msgstr "REST終了"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST Event records the time period from the start of the REST process to the end of the REST server process."
msgstr "REST イベントは、REST プロセスの開始から REST サーバー・プロセスの終了までの期間を記録します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST Start Event records the start of the REST server process."
msgstr "REST Start Event は、REST サーバー・プロセスの開始を記録します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST End Event records the end of the REST server process."
msgstr "REST 終了イベントは、REST サーバー・プロセスの終了を記録します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "These events have the following information."
msgstr "これらのイベントには以下の情報があります。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "HTTP Method"
msgstr "HTTPメソッド"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "URI"
msgstr "ユーアールアイ"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Resource Class"
msgstr "リソースクラス"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Resource Method"
msgstr "リソースメソッド"

#: _versions/main/guides/jfr.adoc
msgid "Client"
msgstr "クライアント"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"HTTP Method records the HTTP Method accessed by the client.\n"
"This will record a string of HTTP methods such as GET, POST, DELETE, and other general HTTP methods."
msgstr "HTTP メソッドは、クライアントがアクセスした HTTP メソッドを記録します。これは、GET、POST、DELETE などの一般的な HTTP メソッドの文字列を記録します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"URI records the URI path accessed by the client.\n"
"This does not include host names or port numbers."
msgstr "URIはクライアントがアクセスしたURIパスを記録します。これにはホスト名やポート番号は含まれません。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Resource Class records the class that was executed.\n"
"We can check whether the Resource Class was executed as expected by the HTTP Method and URI."
msgstr "リソースクラスは実行されたクラスを記録します。HTTPメソッドとURIによって、リソースクラスが期待通りに実行されたかどうかを確認できます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Resource Method records the method that was executed.\n"
"We can check if the Resource Method was executed as expected by the HTTP Method and URI."
msgstr "リソースメソッドは実行されたメソッドを記録します。HTTP メソッドと URI によって、Resource Method が期待通りに実行されたかどうかを確認できます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Client records information about the accessing client."
msgstr "クライアントは、アクセスしたクライアントに関する情報を記録します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Native Image"
msgstr "ネイティブ・イメージ"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Native image supports JDK Flight Recorder.\n"
"This extension also supports native images.\n"
"To enable JFR on Native image, it is usually built with `--enable-monitoring`.\n"
"However, we can enable JFR in Quarkus Native images by adding `jfr` to the configuration `quarkus.native.monitoring`.\n"
"There are two ways to set up this configuration: by including it in `application.properties` or by specifying it at build time."
msgstr "ネイティブ画像はJDK Flight Recorderをサポートしています。この拡張機能はネイティブイメージにも対応しています。NativeイメージでJFRを有効にするには、通常、 `--enable-monitoring` 。ただし、 `jfr` を設定に追加することで、Quarkus NativeイメージでJFRを有効にすることができます `quarkus.native.monitoring` 。この設定を行うには、 `application.properties` に含める方法と、ビルド時に指定する方法の 2 通りがあります。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "The first method is to first configure settings in `application.properties`."
msgstr "最初の方法は、まず `application.properties` で設定を行います。"

#: _versions/main/guides/jfr.adoc
msgid "application.properties"
msgstr "application.properties"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Next, simply build as `./mvnw package -Dnative`."
msgstr "次に、 `./mvnw package -Dnative` としてビルドします。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "The second way is to give `-Dquarkus.native.monitoring=jfr` at build time and build as `./mvnw package -Dnative -Dquarkus.native.monitoring=jfr`."
msgstr "2つ目の方法は、ビルド時に `-Dquarkus.native.monitoring=jfr` を与え、 `./mvnw package -Dnative -Dquarkus.native.monitoring=jfr` としてビルドする方法です。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Once we have finished building the Native image, we can run the native application with JFR as follows"
msgstr "ネイティブ・イメージのビルドが完了したら、次のように JFR でネイティブ・アプリケーションを実行します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Note that at this time, GraalVM is not possible to record JFR on Windows native images."
msgstr "現時点では、GraalVM は Windows ネイティブ・イメージ上で JFR を記録することはできません。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "JFR configuration"
msgstr "JFRの構成"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"We can use the JFR CLI to configure the events that JFR will record.\n"
"The configuration file, JFC file, is in XML format, so we can modify with a text editor.\n"
"However, we should use `jfr configure`, which is included in OpenJDK by default."
msgstr "JFR CLI を使用して、JFR が記録するイベントを設定することができます。設定ファイルである JFC ファイルは XML 形式なので、テキストエディタで変更できます。ただし、OpenJDKにデフォルトで含まれている `jfr configure` 。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Here we create a configuration file in which RestStart and RestEnd events are recorded, which are not recorded by default."
msgstr "ここでは、デフォルトでは記録されないRestStartとRestEndイベントが記録される設定ファイルを作成します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "jfr configure --input default.jfc +quarkus.RestStart#enabled=true +quarkus.RestEnd#enabled=true --output custom-rest.jfc"
msgstr "jfr configure --input default.jfc +quarkus.RestStart#enabled=true +quarkus.RestEnd#enabled=true --output custom-rest.jfc"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "This creates `custom-rest.jfc` as a configuration file with RestStart and RestEnd enabled."
msgstr "これは、RestStartとRestEndを有効にした設定ファイルとして `custom-rest.jfc` 。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Now we are ready to run our application with new settings. We launch the application with JFR configured to be enabled from the startup of the Java Virtual Machine."
msgstr "これで、新しい設定でアプリケーションを実行する準備ができました。Java 仮想マシンの起動時から JFR が有効になるように設定して、アプリケーションを起動します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Developing new events into quarkus-jfr extension."
msgstr "quarkus-jfr拡張への新しいイベントの開発。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "This section is for those who would like to add new events with this extension."
msgstr "このセクションは、この拡張機能を使って新しいイベントを追加したい方のためのセクションです。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"We recommend that new events be associated with existing events.\n"
"Associations are useful when looking at the details of a process that is taking a long time.\n"
"For example, a general REST application retrieves the data needed for processing from a data store.\n"
"If REST events are not associated with datastore events, it is impossible to know which datastore events were processed in each REST request.\n"
"When the two events are associated, we know immediately which datastore event was processed in each REST request."
msgstr "新しいイベントは既存のイベントと関連付けることをお勧めします。関連付けは、時間のかかる処理の詳細を見るときに便利です。例えば、一般的な REST アプリケーションは、データストアから処理に必要なデータを取得します。REST イベントがデータストア・イベントと関連付けられていない場合、各 REST リクエストでどのデータストア・イベントが処理されたかを知ることはできません。2 つのイベントが関連付けられていれば、各 REST 要求でどのデータストア・イベントが処理されたかを即座に知ることができます。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Data store events are not implemented yet."
msgstr "データストアのイベントはまだ実装されていません。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"The quarkus-jfr extension provides a Request ID for event association.\n"
"See Identifying Requests for more information on Request IDs."
msgstr "quarkus-jfr拡張機能には、イベント関連付けのためのリクエストIDが用意されています。リクエストIDの詳細については、リクエストの識別を参照してください。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"In specific code, the following two steps are required.\n"
"First, implement `traceId` and `spanId` on the new event as follows\n"
"The `@TraceIdRelational` and `@SpanIdRelational` attached to these events will provide the association."
msgstr "具体的なコードとしては、以下の2つのステップが必要です。まず、新しいイベントに `traceId` と `spanId` を以下のように実装します。 これらのイベントに `@TraceIdRelational` と `@SpanIdRelational` を付けることで、関連付けを行います。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Then you get the information to store in them from the `IdProducer` object's `getTraceId()` and `getSpanId()`."
msgstr "そして、 `IdProducer` オブジェクトの `getTraceId()` と `getSpanId()` から、格納する情報を取得します。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "quarkus-jfr Configuration Reference"
msgstr "quarkus-jfr 設定リファレンス"

#: _versions/main/guides/jfr.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
